
indicator(title="Double EMA", shorttitle="DEMA", overlay=true, timeframe="", timeframe_gaps=true)


length1 = input.int(144, minval=1)
length2 = input.int(169, minval=1)
length3 = input.int(21, minval=1)


src1 = input(close, title="Source")
src2 = input(close, title="Source")
src3 = input(close, title="Source")


e1a = ta.ema(src1, length1)
e1b = ta.ema(src2, length2)
e1c = ta.ema(src3, length3)

e2a = ta.ema(e1a, length1)
e2b = ta.ema(e1b, length2)
e2c = ta.ema(e1c, length3)

dema1 = 2 * e1a - e2a
dema2 = 2 * e1b - e2b
dema3 = 2 * e1c - e2c

plot(dema1, "DEMA1", linewidth=1, color=#4943a0)
plot(dema2, "DEMA2", linewidth=1, color=#c22a19)
plot(dema3, "DEMA3", linewidth=1, color=#0000FF)


// See if there's a DEMA crossover
demaCrossover = if len2 > 0 and len3 > 0
    crossover(demaVal1, demaVal2) and (demaVal3 > demaVal3[1])
else
    if len2 > 0 and len3 == 0
        crossover(demaVal1, demaVal2)
    else
        if len3 > 0 and len2 == 0
            crossover(demaVal1, demaVal3)
        else
            crossover(close, demaVal1)
            

// Check if there's a DEMA crossunder
demaCrossunder = if len2 > 0 and len3 > 0
    crossunder demaVal1, demaVal2) and (demaVal3 < demaVal3[1])
else
    if len2 > 0 and len3 == 0
        crossunder(demaVal1, demaVal2)
    else
        if len3 > 0 and len2 == 0
            crossunder(demaVal1, demaVal3)
        else
            crossunder(close, demaVal1)


// Step 4. Output indicator data
// Plot DEMAs on the chart
plot(series=demaVal1, color=orange, linewidth=2, title="DEMA #1")
plot(series=demaVal2, color=blue, linewidth=2, title="DEMA #2")
plot(series=demaVal3, color=fuchsia, linewidth=2, title="DEMA #3")

// Highlight DEMA signals
bgColour = demaCrossover ? green :
     demaCrossunder ? red :
     na

bgcolor(color=showSignals ? bgColour : na)